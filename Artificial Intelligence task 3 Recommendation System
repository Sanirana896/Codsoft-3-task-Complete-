import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# Load the item metadata
items = pd.read_csv('items.csv')

# Create a TF-IDF vectorizer to convert item descriptions into vectors
vectorizer = TfidfVectorizer(stop_words='english')

# Fit the vectorizer to the item descriptions and transform them into vectors
item_vectors = vectorizer.fit_transform(items['description'])

# Calculate the similarity between items using cosine similarity
item_similarity = cosine_similarity(item_vectors)

# Define a function to recommend items to a user
def recommend_items(user_id, num_recommendations=5):
    # Get the user's preferred items
    preferred_items = items[items['user_id'] == user_id]
    
    # Calculate the similarity between the preferred items and all items
    similarity_scores = []
    for preferred_item in preferred_items:
        similarity_scores.extend(item_similarity[preferred_item['item_id']])
    
    # Get the top N similar items
    top_similar_items = np.argsort(-similarity_scores)[:num_recommendations]
    
    # Return the top N recommended items
    return items.iloc[top_similar_items]['title']

# Test the recommendation function
user_id = 1
recommended_items = recommend_items(user_id)
print('Recommended items for user', user_id, ':', recommended_items)

